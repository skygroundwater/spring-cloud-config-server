version: '2.1'
services:
  keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_HOSTNAME: keycloak
    volumes:
      - ./realm-export.json:/opt/jboss/keycloak/realm-export.json
    command:
      - "-Dkeycloak.import=/opt/jboss/keycloak/realm-export.json"
      - "-Dkeycloak.profile.feature.scripts=enabled"
      - "-Dkeycloak.profile.feature.upload_scripts=enabled"
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "keycloak"
  vault:
    image: "hashicorp/vault"
    container_name: "vault"
    depends_on:
      keycloak:
        condition: service_completed_successfully
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_LISTEN_ADDRES: "0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
    networks:
      backend:
        aliases:
          - "vault"
  eureka:
    image: eureka
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_started
    environment:
      CONFIGSERVER_URI: "http://spring-cloud-config-server"
      CONFIGSERVER_PORT: "8071/"
      PROFILE: "dev"
      CONFIGSERVER_NAME: "spring-cloud-config-server"
      APPLICATION_NAME: "eureka-server"
      EUREKA_INSTANCE_HOSTNAME: "localhost"
      SERVER_PORT: "8070"
    networks:
      backend:
        aliases:
          - "eureka"


  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    platform: linux/amd64
    networks:
      backend:
        aliases:
          - "zookeeper"

  kafkaserver:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "dresses:1:1,ratings:1:1"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      backend:
        aliases:
          - "kafka"


  redisserver:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      backend:
        aliases:
          - "redis"


  database:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Tilitilitatata12345"
      POSTGRES_DB: "public"
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  api-gateway:
    image: api-gateway
    ports:
      - "8040:8040"
    depends_on:
      configserver:
        condition: service_healthy
      keycloak:
        condition: service_completed_successfully
      vault:
        condition: service_completed_successfully
    environment:
      SERVER_PORT: "8040"
      PROFILE: "dev"
      APPLICATION_NAME: "spring-cloud-api-gateway"
      EUREKA_INSTANCE_HOSTNAME: "eureka"
      EUREKA_SERVER_PORT: "8070"
      CONFIGSERVER_URI: "http://spring-cloud-config-server:"
      CONFIGSERVER_PORT: "8071"
      CONFIGSERVER_NAME: "spring-cloud-config-server"
    networks:
      backend:
        aliases:
          - "api-gateway"
  configserver:
    image: spring-cloud-config-server
    ports:
      - "8071:8071"
    depends_on:
      vault:
        condition: service_completed_successfully
    environment:
      #      GIT_USERNAME: "skygroundwater"
      #      GIT_PASSWORD: "Tilitilitatata12345"
      #      GIT_URI: "https://github.com/skygroundwater/spring-cloud-configuration-properties-repository"
      #      GIT_SSH_PRIVATE_KEY: "GKwJxKSVDUWXW9oXEIms/pHT7wgXHQqSg/ceiWomQGg"
      #      GIT_SEARCH_PATHS: "licensing-service"
      SERVER_PORT: "8071"
      PROFILES: "vault"
      APPLICATION_NAME: "spring-cloud-config-server"
      VAULT_PORT: "8200"
      VAULT_HOST: "vault"
      VAULT_AUTH: "token"
      VAULT_TOKEN: "myroot"
      KV_VERSION: "2"
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "spring-cloud-config-server"
  licensingservice:
    image: licensing-service
    hostname: "licensing-service"
    volumes:
      - ./licensing-service-data.sql:/docker-entrypoint-licensing-service-datadb.d/1-licensing-service-data.sql
    environment:
      SERVER_PORT: "8020"
      PROFILE: "dev"
      EUREKA_INSTANCE_HOSTNAME: "eureka"
      EUREKA_SERVER_PORT: "8070"
      CONFIGSERVER_URI: "http://spring-cloud-config-server:"
      CONFIGSERVER_PORT: "8071"
      CONFIGSERVER_NAME: "spring-cloud-config-server"
      APPLICATION_NAME: "licensing-service"
      DATABASESERVER_PORT: "5432"
      DATABASESERVER_HOST: "jdbc:postgresql://database:"
      DATABASE_NAME: "public"
      DATABASE_USERNAME: "postgres"
      DATABASE_PASSWORD: "Tilitilitatata12345"
      ENCRYPT_KEY: "IMSYMMETRIC"
      KEYCLOAK_REALM: "spmia-realm"
      KEYCLOAK_SERVER_PORT: "8080"
      KEYCLOAK_HOSTNAME: "keycloak"
      KEYCLOAK_SSL_REQUIRED: "external"
      KEYCLOAK_RESOURCE_CLIENT: "ostock"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eureka:
        condition: service_healthy
    ports:
      - "8020:8020"
    networks:
      backend:
        aliases:
          - "licensing-service"
  organizationservice:
    image: organization-service
    hostname: "organization-service"
    volumes:
      - ./organization-service-data.sql:/docker-entrypoint-organization-service-datadb.d/1-organization-service-data.sql
    environment:
      SERVER_PORT: "8090"
      PROFILE: "dev"
      EUREKA_SERVER_PORT: "8070"
      EUREKA_INSTANCE_HOSTNAME: "eureka"
      CONFIGSERVER_URI: "http://spring-cloud-config-server:"
      CONFIGSERVER_PORT: "8071"
      CONFIGSERVER_NAME: "spring-cloud-config-server"
      APPLICATION_NAME: "organization-service"
      DATABASESERVER_PORT: "5432"
      DATABASESERVER_HOST: "jdbc:postgresql://database:"
      DATABASE_NAME: "public"
      DATABASE_USERNAME: "postgres"
      DATABASE_PASSWORD: "Tilitilitatata12345"
      ENCRYPT_KEY: "IMSYMMETRIC"
      KEYCLOAK_REALM: "spmia-realm"
      KEYCLOAK_SERVER_PORT: "8080"
      KEYCLOAK_HOSTNAME: "keycloak"
      KEYCLOAK_SSL_REQUIRED: "external"
      KEYCLOAK_RESOURCE_CLIENT: "ostock"
    depends_on:
      keycloak:
        condition: service_healthy
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eureka:
        condition: service_healthy
    ports:
      - "8090:8090"
    networks:
      backend:
        aliases:
          - "organization-service"
networks:
  backend:
    driver: bridge